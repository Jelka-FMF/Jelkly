{
  "Array": "Add, remove, and replace items in lists.",
  "Array._pickRandom": "Return a random value from the array",
  "Array._popStatement": "Remove the last element from an array and return it.",
  "Array._removeAtStatement": "Remove the element at a certain index.",
  "Array._shiftStatement": "Remove the first element from an array and return it. This method changes the length of the array.",
  "Array._unshiftStatement": "Add one element to the beginning of an array and return the new length of the array.",
  "Array.concat": "Concatenates the values with another array.",
  "Array.concat|param|arr": "The other array that is being concatenated with",
  "Array.every": "Tests whether all elements in the array pass the test implemented by the provided function.",
  "Array.every|param|callbackfn": "A function that accepts up to two arguments. The every method calls the callbackfn function one time for each element in the array.",
  "Array.fill": "Fills all the elements of an array from a start index to an end index with a static value. The end index is not included.",
  "Array.filter": "Return the elements of an array that meet the condition specified in a callback function.",
  "Array.filter|param|callbackfn": "A function that accepts up to two arguments. The filter method calls the callbackfn function one time for each element in the array.",
  "Array.find": "Returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned.",
  "Array.forEach": "Call a defined callback function on each element of an array.",
  "Array.forEach|param|callbackfn": "A function that accepts up to two arguments. The forEach method calls the callbackfn function one time for each element in the array.",
  "Array.get": "Get the value at a particular index",
  "Array.get|param|index": "the zero-based position in the list of the item, eg: 0",
  "Array.indexOf": "Return the index of the first occurrence of a value in an array.",
  "Array.indexOf|param|fromIndex": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
  "Array.indexOf|param|item": "The value to locate in the array.",
  "Array.insertAt": "Insert the value at a particular index, increases length by 1",
  "Array.insertAt|param|index": "the zero-based position in the list to insert the value, eg: 0",
  "Array.isArray": "Check if a given object is an array.",
  "Array.join": "joins all elements of an array into a string and returns this string.",
  "Array.join|param|sep": "the string separator",
  "Array.length": "Get or set the length of an array. This number is one more than the index of the last element the array.",
  "Array.map": "Call a defined callback function on each element of an array, and return an array containing the results.",
  "Array.map|param|callbackfn": "A function that accepts up to two arguments. The map method calls the callbackfn function one time for each element in the array.",
  "Array.pop": "Remove the last element from an array and return it.",
  "Array.push": "Append a new element to an array.",
  "Array.reduce": "Call the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
  "Array.reduce|param|callbackfn": "A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the array.",
  "Array.reduce|param|initialValue": "Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",
  "Array.removeAt": "Remove and return the element at a certain index.",
  "Array.removeElement": "Remove the first occurence of an object. Returns true if removed.",
  "Array.reverse": "Reverse the elements in an array. The first array element becomes the last, and the last array element becomes the first.",
  "Array.set": "Store a value at a particular index",
  "Array.set|param|index": "the zero-based position in the list to store the value, eg: 0",
  "Array.set|param|value": "the value to insert, eg: 0",
  "Array.shift": "Remove the first element from an array and return it. This method changes the length of the array.",
  "Array.slice": "Return a section of an array.",
  "Array.slice|param|end": "The end of the specified portion of the array. eg: 0",
  "Array.slice|param|start": "The beginning of the specified portion of the array. eg: 0",
  "Array.some": "Tests whether at least one element in the array passes the test implemented by the provided function.",
  "Array.some|param|callbackfn": "A function that accepts up to two arguments. The some method calls the callbackfn function one time for each element in the array.",
  "Array.sort": "Sort the elements of an array in place and returns the array. The sort is not necessarily stable.",
  "Array.splice": "Remove elements from an array.",
  "Array.splice|param|deleteCount": "The number of elements to remove. eg: 0",
  "Array.splice|param|start": "The zero-based location in the array from which to start removing elements. eg: 0",
  "Array.unshift": "Add one element to the beginning of an array and return the new length of the array.",
  "Array@type": "Add, remove, and replace items in lists.",
  "Boolean.toString": "Returns a string representation of an object.",
  "Buffer.fill": "Fill (a fragment) of the buffer with the given value",
  "Buffer.getNumber": "Read a number in a specified format from the buffer",
  "Buffer.getUint8": "Read an unsigned byte at a particular location",
  "Buffer.hash": "Compute k-bit FNV-1 non-cryptographic hash of the buffer",
  "Buffer.isReadOnly": "Return false when the buffer can be written to",
  "Buffer.length": "Return the length of the buffer object",
  "Buffer.rotate": "Rotate buffer left in place\n* @param offset number of bytes to shift; use negative value to shift right",
  "Buffer.rotate|param|length": "number of elements in buffer; if negative, the length is set as the buffer length minus start, e.g. -1",
  "Buffer.rotate|param|start": "start offset in buffer; default is 0",
  "Buffer.setNumber": "Write a number in a specified format in the buffer",
  "Buffer.setUint8": "Write an unsigned byte at a particular location",
  "Buffer.shift": "Shift buffer left in place, with zero padding\n* @param offset number of bytes to shift; use negative value to shift right",
  "Buffer.shift|param|length": "number of elements in buffer; if negative, the length is set as the buffer length minus start, e.g. -1",
  "Buffer.shift|param|start": "start offset in buffer; default is 0",
  "Buffer.slice": "Return a copy of a fragment of a buffer",
  "Buffer.toHex": "Convert a buffer to its hexadecimal representation",
  "Buffer.toString": "Convert a buffer to string assuming UTF8 encoding",
  "Buffer.write": "Write contents of `src` at `dstOffset` in the current buffer",
  "Infinity": "Constant representing positive infinity.",
  "Math": "More complex operations with numbers.",
  "Math.abs": "Returns the absolute value of a number (the value without regard to whether it is positive or negative).\nFor example, the absolute value of -5 is the same as the absolute value of 5.",
  "Math.abs|param|x": "A numeric expression for which the absolute value is needed.",
  "Math.acos": "Returns the arccosine (in radians) of a number",
  "Math.acos|param|x": "A number",
  "Math.asin": "Returns the arcsine (in radians) of a number",
  "Math.asin|param|x": "A number",
  "Math.atan": "Returns the arctangent (in radians) of a number",
  "Math.atan2": "Returns the arctangent of the quotient of its arguments.",
  "Math.atan2|param|x": "A number",
  "Math.atan2|param|y": "A number",
  "Math.atan|param|x": "A number",
  "Math.ceil": "Returns the smallest number greater than or equal to its numeric argument.",
  "Math.ceil|param|x": "A numeric expression.",
  "Math.cos": "Returns the cosine of a number.",
  "Math.cos|param|x": "An angle in radians",
  "Math.exp": "Returns returns ``e^x``.",
  "Math.exp|param|x": "A number",
  "Math.floor": "Returns the greatest number less than or equal to its numeric argument.",
  "Math.floor|param|x": "A numeric expression.",
  "Math.idiv": "Returns the value of integer signed 32 bit division of two numbers.",
  "Math.idiv|param|x": "The first number",
  "Math.idiv|param|y": "The second number",
  "Math.imul": "Returns the value of integer signed 32 bit multiplication of two numbers.",
  "Math.imul|param|x": "The first number",
  "Math.imul|param|y": "The second number",
  "Math.log": "Returns the natural logarithm (base e) of a number.",
  "Math.log|param|x": "A number",
  "Math.max": "Returns the larger of two supplied numeric expressions.",
  "Math.min": "Returns the smaller of two supplied numeric expressions.",
  "Math.pow": "Returns the value of a base expression taken to a specified power.",
  "Math.pow|param|x": "The base value of the expression.",
  "Math.pow|param|y": "The exponent value of the expression.",
  "Math.random": "Returns a pseudorandom number between 0 and 1.",
  "Math.randomRange": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "Math.randomRange|param|max": "the upper inclusive bound, eg: 10",
  "Math.randomRange|param|min": "the lower inclusive bound, eg: 0",
  "Math.round": "Returns a supplied numeric expression rounded to the nearest number.",
  "Math.roundWithPrecision": "Rounds ``x`` to a number with the given number of ``digits``",
  "Math.roundWithPrecision|param|digits": "the number of resulting digits",
  "Math.roundWithPrecision|param|x": "the number to round",
  "Math.round|param|x": "The value to be rounded to the nearest number.",
  "Math.sign": "Returns the sign of the x, indicating whether x is positive, negative or zero.",
  "Math.sign|param|x": "The numeric expression to test",
  "Math.sin": "Returns the sine of a number.",
  "Math.sin|param|x": "An angle in radians",
  "Math.sqrt": "Returns the square root of a number.",
  "Math.sqrt|param|x": "A numeric expression.",
  "Math.tan": "Returns the tangent of a number.",
  "Math.tan|param|x": "An angle in radians",
  "Math.trunc": "Returns the number with the decimal part truncated.",
  "Math.trunc|param|x": "A numeric expression.",
  "NaN": "Constant representing Not-A-Number.",
  "Number.isNaN": "Check if a given value is of type Number and it is a NaN.",
  "Number.toString": "Returns a string representation of a number.",
  "Object.keys": "Return the field names in an object.",
  "String": "Combine, split, and search text strings.",
  "String.charAt": "Return the character at the specified index.",
  "String.charAt|param|index": "The zero-based index of the desired character.",
  "String.charCodeAt": "Return the Unicode value of the character at the specified location.",
  "String.charCodeAt|param|index": "The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",
  "String.compare": "See how the order of characters in two strings is different (in ASCII encoding).",
  "String.compare|param|that": "String to compare to target string",
  "String.concat": "Returns a string that contains the concatenation of two or more strings.",
  "String.concat|param|other": "The string to append to the end of the string.",
  "String.fromCharCode": "Make a string from the given ASCII character code.",
  "String.includes": "Determines whether a string contains the characters of a specified string.",
  "String.includes|param|searchValue": "the text to find",
  "String.includes|param|start": "optional start index for the search",
  "String.indexOf": "Returns the position of the first occurrence of a specified value in a string.",
  "String.indexOf|param|searchValue": "the text to find",
  "String.indexOf|param|start": "optional start index for the search",
  "String.isEmpty": "Returns a value indicating if the string is empty",
  "String.length": "Returns the length of a String object.",
  "String.replace": "Return the current string with the first occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll": "Return the current string with each occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replaceAll|param|toReplace": "the substring to replace in the current string",
  "String.replace|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replace|param|toReplace": "the substring to replace in the current string",
  "String.slice": "Return a substring of the current string.",
  "String.slice|param|end": "one-past-last character index",
  "String.slice|param|start": "first character index; can be negative from counting from the end, eg:0",
  "String.split": "Splits the string according to the separators",
  "String.split|param|separator": "@param limit",
  "String.substr": "Return a substring of the current string.",
  "String.substr|param|length": "number of characters to extract, eg: 10",
  "String.substr|param|start": "first character index; can be negative from counting from the end, eg:0",
  "String.toLowerCase": "Converts the string to lower case characters.",
  "String.toUpperCase": "Converts the string to upper case characters.",
  "String.trim": "Return a substring of the current string with whitespace removed from both ends",
  "String@type": "Combine, split, and search text strings.",
  "StringMap": "A dictionary from string key to string values",
  "_py.range": "Returns a sequence of numbers up to but not including the limit\n\nIf more than one argument is passed, this argument is instead used for the first value in the range",
  "_py.range|param|first": "The value to end the sequence before. This value will not show up in the result.",
  "_py.range|param|step": "The value to increase or decrease by for each step in the range. Must be a nonzero integer",
  "_py.range|param|stop": "The value to end the sequence before. This value will not show up in the result",
  "_py.slice": "Returns a section of an array according to python's extended slice syntax",
  "_py.stringSlice": "Returns a section of a string according to python's extended slice syntax",
  "basic": "Provides access to basic control functionality.",
  "basic.onFrame": "Repeat the code for each frame\n\n@param handler.frameNumber the current frame number\n@param handler.timeSinceStart the time since start in milliseconds",
  "basic.onFrame|param|handler": "the code to execute",
  "basic.setFrameRate": "Set the pattern frame rate",
  "basic.setFrameRate|param|frameRate": "the frame rate in frames per second",
  "colors": "Provides access to colors.",
  "colors.cmykColor": "Create a CMYK color",
  "colors.cmykColor|param|cyan": "the intensity of cyan (0-100)",
  "colors.cmykColor|param|key": "the intensity of black (0-100)",
  "colors.cmykColor|param|magenta": "the intensity of magenta (0-100)",
  "colors.cmykColor|param|yellow": "the intensity of yellow (0-100)",
  "colors.cmykComponent": "Get a CMYK component of a color",
  "colors.cmykComponent|param|color": "the color to get the component from",
  "colors.cmykComponent|param|component": "the CMYK component to get",
  "colors.hslColor": "Create an HSL color",
  "colors.hslColor|param|hue": "the hue of the color (0-360)",
  "colors.hslColor|param|lightness": "the lightness of the color (0-100)",
  "colors.hslColor|param|saturation": "the saturation of the color (0-100)",
  "colors.hslComponent": "Get an HSL component of a color",
  "colors.hslComponent|param|color": "the color to get the component from",
  "colors.hslComponent|param|component": "the HSL component to get",
  "colors.hsvColor": "Create an HSV color",
  "colors.hsvColor|param|hue": "the hue of the color (0-360)",
  "colors.hsvColor|param|saturation": "the saturation of the color (0-100)",
  "colors.hsvColor|param|value": "the value of the color (0-100)",
  "colors.hsvComponent": "Get an HSV component of a color",
  "colors.hsvComponent|param|color": "the color to get the component from",
  "colors.hsvComponent|param|component": "the HSV component to get",
  "colors.randomColor": "Generate a random color",
  "colors.rgbColor": "Create an RGB color",
  "colors.rgbColor|param|blue": "the intensity of blue (0-255)",
  "colors.rgbColor|param|green": "the intensity of green (0-255)",
  "colors.rgbColor|param|red": "the intensity of red (0-255)",
  "colors.rgbComponent": "Get an RGB component of a color",
  "colors.rgbComponent|param|color": "the color to get the component from",
  "colors.rgbComponent|param|component": "the RGB component to get",
  "lights": "Provides access to controlling lights.",
  "lights.countLights": "Get a number of lights",
  "lights.getColor": "Get the color of the specified light",
  "lights.getColors": "Get the colors of the specified lights",
  "lights.getColors|param|lights": "the lights to get the colors of",
  "lights.getColor|param|light": "the light to get the color of",
  "lights.getCoordinate": "Get the coordinate of the specified light",
  "lights.getCoordinates": "Get the coordinates of the specified lights",
  "lights.getCoordinates|param|axis": "the coordinate axis to get the value of",
  "lights.getCoordinates|param|lights": "the lights to get the coordinates of",
  "lights.getCoordinate|param|axis": "the coordinate axis to get the value of",
  "lights.getCoordinate|param|light": "the light to get the coordinate of",
  "lights.getLights": "Get a list of lights",
  "lights.lightsWhere": "Find lights where the specified axis value meets the specified relation",
  "lights.lightsWhere|param|axis": "the axis to check",
  "lights.lightsWhere|param|lights": "the list of lights to check",
  "lights.lightsWhere|param|relation": "the relation to check",
  "lights.lightsWhere|param|value": "the value to compare against",
  "lights.randomLight": "Get a random light",
  "lights.resetLights": "Turn off all lights",
  "lights.setLights": "Set lights to the specified color",
  "lights.setLights|param|color": "the RGB color of the lights to set",
  "lights.setLights|param|lights": "a single light or an array of lights",
  "parseFloat": "Convert a string to a number.",
  "parseInt": "Convert a string to an integer.\n\n\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
  "parseInt|param|radix": "optional A value between 2 and 36 that specifies the base of the number in text.",
  "parseInt|param|text": "A string to convert into an integral number. eg: \"123\"",
  "randint": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "randint|param|max": "the upper inclusive bound, eg: 10",
  "randint|param|min": "the lower inclusive bound, eg: 0",
  "shapes": "Provides access to shapes and objects.",
  "shapes.ball": "Get a list of lights intersecting with the ball",
  "shapes.ball|param|r": "the radius of the ball",
  "shapes.ball|param|x0": "the x coordinate of the ball center",
  "shapes.ball|param|y0": "the y coordinate of the ball center",
  "shapes.ball|param|z0": "the z coordinate of the ball center",
  "shapes.cilinder": "Get a list of lights intersecting with the cilinder",
  "shapes.cilinder|param|h": "the height of the cilinder",
  "shapes.cilinder|param|ksi": "the second rotation of the cilinder (in degrees)",
  "shapes.cilinder|param|psi": "the first rotation of the cilinder (in degrees)",
  "shapes.cilinder|param|r": "the radius of the cilinder",
  "shapes.cilinder|param|x0": "the x coordinate of the cilinder center",
  "shapes.cilinder|param|y0": "the y coordinate of the cilinder center",
  "shapes.cilinder|param|z0": "the z coordinate of the cilinder center",
  "shapes.plane": "Get a list of lights intersecting with the plane",
  "shapes.planeRelation": "Get a list of lights in relation to the plane",
  "shapes.planeRelation|param|ksi": "the second rotation of the plane (in degrees)",
  "shapes.planeRelation|param|psi": "the first rotation of the plane (in degrees)",
  "shapes.planeRelation|param|relation": "the relation to compare against",
  "shapes.planeRelation|param|x0": "the x coordinate of the point in plane",
  "shapes.planeRelation|param|y0": "the y coordinate of the point in plane",
  "shapes.planeRelation|param|z0": "the z coordinate of the point in plane",
  "shapes.plane|param|d": "the thickness of the plane",
  "shapes.plane|param|ksi": "the second rotation of the plane (in degrees)",
  "shapes.plane|param|psi": "the first rotation of the plane (in degrees)",
  "shapes.plane|param|x0": "the x coordinate of the point in the plane",
  "shapes.plane|param|y0": "the y coordinate of the point in the plane",
  "shapes.plane|param|z0": "the z coordinate of the point in the plane",
  "shapes.sphere": "Get a list of lights intersecting with the sphere",
  "shapes.sphere|param|d": "the thickness of the sphere",
  "shapes.sphere|param|r": "the radius of the sphere",
  "shapes.sphere|param|x0": "the x coordinate of the sphere center",
  "shapes.sphere|param|y0": "the y coordinate of the sphere center",
  "shapes.sphere|param|z0": "the z coordinate of the sphere center"
}